import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
public class CombinitionSum {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(candidates); 
        backtrack(result, new ArrayList<>(), candidates, target, 0);
        return result;
    }
    private void backtrack(List<List<Integer>> result, List<Integer> combination, int[] candidates, int target, int start) {
        if (target == 0) {  
            result.add(new ArrayList<>(combination));
            return;
        }
        for (int i = start; i < candidates.length; i++) {
            if (candidates[i] > target) break; 
            combination.add(candidates[i]);  
            backtrack(result, combination, candidates, target - candidates[i], i + 1);
            combination.remove(combination.size() - 1);  
        }
    }
    public static void main(String[] args) {
        CombinitionSum cs = new CombinitionSum();
        int[] candidates = {10, 1, 3, 5, 7, 9, 11};
        int target = 8;
        System.out.println(cs.combinationSum(candidates, target));
    }
}